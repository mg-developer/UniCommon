CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(UniCommon)
SET( PRJ_NAME UniCommon )

STRING(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} LOWERCASE_CMAKE_SYSTEM_PROCESSOR)
IF(LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^arm")
    SET(PLATFORM_CPU_ARM 1)
ELSEIF(LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^mips")
    SET(PLATFORM_CPU_MIPS 1)
ELSEIF(LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64|amd64)")
    SET(PLATFORM_CPU_X86_64 1)
    SET(CPU_ARCH "x64")
    ADD_DEFINITIONS(-DX64)
ELSEIF(LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(i[3-6]86|x86)")
    SET(PLATFORM_CPU_X86 1)
    SET(CPU_ARCH "x86")
    ADD_DEFINITIONS(-DX86)
ENDIF()

SET(CMAKE_INSTALL_PREFIX "." CACHE PATH "")
MESSAGE(STATUS "CMAKE_INSTALL_PREFIX=" ${CMAKE_INSTALL_PREFIX})

SET(ALT_PTHREAD_ROOT_DIR "" CACHE PATH "")
SET(USE_POSIX_PTHREAD OFF CACHE BOOL "")
SET(SELF_TEST OFF CACHE BOOL "")

SET(SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)
SET(INCLUDE_DIR ${CMAKE_SOURCE_DIR}/include)

IF(UNIX)
    #Phtreads are enabled allways for unix
    SET(USE_POSIX_PTHREAD "ON")
ENDIF(UNIX)

IF(USE_POSIX_PTHREAD)
    FIND_PACKAGE(Threads REQUIRED)
    IF(Threads_FOUND)
        FIND_PATH(PTHREAD_INCLUDE_PATH
            NAMES pthread.h
            HINTS ${ALT_PTHREAD_ROOT_DIR} ${ALT_PTHREAD_ROOT_DIR}/include
        )
        FIND_LIBRARY(PTHREAD_LIBRARY
            NAMES pthreadVC2.lib
            HINTS ${ALT_PTHREAD_ROOT_DIR} ${ALT_PTHREAD_ROOT_DIR}/lib ${ALT_PTHREAD_ROOT_DIR}/lib/${CPU_ARCH}
        )
        IF(EXISTS ${Threads_INCLUDE_DIR})
            SET(UNI_THREAD_INCLUDE_DIR ${Threads_INCLUDE_DIR})
        ELSE()
            IF(EXISTS ${PTHREAD_INCLUDE_PATH})
            MESSAGE(STATUS "Alternative location of PTHREAD headers:" ${PTHREAD_INCLUDE_PATH})
            SET(UNI_THREAD_INCLUDE_DIR ${PTHREAD_INCLUDE_PATH})
            ELSE()
                MESSAGE(SEND_ERROR "Threads headers not found")
            ENDIF()
        ENDIF()
        IF(UNIX)
            SET(UNI_THREAD_LIBRARIES ${CMAKE_THREAD_LIBS_INIT})
        ENDIF(UNIX)
        IF(WIN32)
            IF(EXISTS ${PTHREAD_LIBRARY})
                MESSAGE(STATUS "Alternative location of PTHREAD lib:" ${PTHREAD_LIBRARY})
            SET(UNI_THREAD_LIBRARIES ${PTHREAD_LIBRARY})
            ELSE()
                MESSAGE(SEND_ERROR "Threads lib not found")
            ENDIF()
        ENDIF(WIN32)
        ADD_DEFINITIONS("-DUSE_POSIX_PTHREAD")
    ENDIF()
ELSE()
    MESSAGE(STATUS "Linking against boost dynamic libraries")
    SET(Boost_USE_STATIC_LIBS OFF)
    SET(Boost_USE_MULTITHREADED ON)
    SET(Boost_DIR "cmake-modules")
    #SET(Boost_ADDITIONAL_VERSIONS "1.46" "1.47" "1.48" "1.49" "1.50" "1.51")
    FIND_PACKAGE(Boost COMPONENTS thread system date_time chrono REQUIRED)
    IF (Boost_FOUND)
        ADD_DEFINITIONS("-DHAS_BOOST")
        SET(UNI_THREAD_INCLUDE_DIR ${Boost_INCLUDE_DIR})
        SET(UNI_THREAD_LIBRARIES ${Boost_LIBRARIES})
    ENDIF()
ENDIF()

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(include)
